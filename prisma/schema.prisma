generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Student {
  id                 String            @id @default(cuid())
  fullName           String
  phone              String?
  address            String?
  guardianName       String?
  guardianPhone      String?
  school             String?
  course             String
  specialty          String?
  schoolSchedule     String?
  referralSource     ReferralSource?
  desiredHours       Int?
  sessionDurMin      Int?
  createdAt          DateTime          @default(now())
  updatedAt          DateTime          @updatedAt
  billingRateEurHour Float?
  notes              String?
  extras             Extracurricular[]
  invoice            Invoice[]
  lessons            Lesson[]
  scheduleSend       ScheduleSend[]
  subjects           Subject[]
  schoolBlocks       SchoolBlock[]

  @@index([course])
}

model Subject {
  id        String  @id @default(cuid())
  studentId String
  name      String
  student   Student @relation(fields: [studentId], references: [id], onDelete: Cascade)

  @@index([studentId])
}

model Extracurricular {
  id        String  @id @default(cuid())
  studentId String
  label     String
  dayOfWeek Int
  startMin  Int
  durMin    Int
  student   Student @relation(fields: [studentId], references: [id], onDelete: Cascade)

  @@index([studentId, dayOfWeek])
}

model SchoolBlock {
  id        String    @id @default(cuid())
  studentId String    @map("student_id")
  fromDay   Int       @map("from_day")
  toDay     Int       @map("to_day")
  startMin  Int       @map("start_min")
  endMin    Int       @map("end_min")
  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamptz(6)
  student   Student   @relation(fields: [studentId], references: [id], onDelete: Cascade)

  @@index([studentId, fromDay, toDay], map: "idx_school_blocks_days")
  @@index([studentId], map: "idx_school_blocks_student")
  @@map("student_school_blocks")
}

model WeekState {
  weekStart DateTime @id
  saved     Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Lesson {
  id             String    @id @default(cuid())
  studentId      String
  teacher        Teacher   @default(NURIA)
  dayOfWeek      Int
  startMin       Int
  durMin         Int
  actualStartMin Int?
  actualDurMin   Int?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  weekStart      DateTime?
  student        Student   @relation(fields: [studentId], references: [id], onDelete: Cascade)

  @@unique([studentId, weekStart, dayOfWeek, startMin], name: "uniq_student_slot_per_week", map: "uniq_student_slot_per_week")
  @@index([weekStart, dayOfWeek, startMin, teacher])
  @@index([studentId, dayOfWeek, startMin])
  @@index([teacher, dayOfWeek, startMin])
}

model Invoice {
  id            String    @id @default(cuid())
  studentId     String
  yearMonth     String
  rate          Float
  adjustMin     Int       @default(0)
  totalMin      Int
  amount        Float
  status        String    @default("PENDIENTE")
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  paymentMethod String?
  sentAt        DateTime?
  paidAt        DateTime?
  student       Student   @relation(fields: [studentId], references: [id], onDelete: Cascade)

  @@unique([studentId, yearMonth])
  @@index([studentId])
  @@index([yearMonth])
}

model ScheduleSend {
  id        String    @id @default(cuid())
  studentId String
  weekStart DateTime  @db.Timestamptz(6)
  status    String    @default("PENDIENTE")
  sentAt    DateTime? @db.Timestamptz(6)
  createdAt DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt DateTime  @default(now()) @updatedAt @db.Timestamptz(6)
  weekKey   String?
  student   Student   @relation(fields: [studentId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([studentId, weekStart], map: "ScheduleSend_student_week_uq")
  @@unique([studentId, weekKey], map: "ScheduleSend_student_weekkey_uq")
  @@index([studentId], map: "ScheduleSend_student_idx")
  @@index([weekStart], map: "ScheduleSend_week_idx")
}

model students {
  id              BigInt  @id @default(autoincrement())
  full_name       String
  phone           String?
  address         String?
  guardian_name   String?
  guardian_phone  String?
  school          String?
  course          String?
  specialty       String?
  referral_source String?
  desired_hours   Int?
}

enum ReferralSource {
  amigos
  companeros
  internet
  otro
}

enum Teacher {
  NURIA
  SANTI
}
